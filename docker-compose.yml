version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ledger
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6-jammy
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    build:
      context: .
      dockerfile: docker/rabbitmq.Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    ports:
      - "8080:8080"
    environment:
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/ledger?sslmode=disable
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB_NAME: ledger
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  processor:
    build:
      context: .
      dockerfile: docker/processor.Dockerfile
    environment:
      POSTGRES_URI: postgres://postgres:postgres@postgres:5432/ledger?sslmode=disable
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB_NAME: ledger
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data:
  mongo_data: